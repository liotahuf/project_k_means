משימות ליום רביעי 14.8:

שאלות לשחר:
1. לפי מה שהבנו עבור INDIRECT ACESS לכתיבה/קריאה, ניתן לכתוב לRAM לאיזה כתובת שהAPB-MASTER דורש-האם זה נכון - במידה וכן - הכתיבה לRAM עשויה להשאיר GAPS - איך אפשר להתמודד עם זה, איך נדע תוך שאנחנו מפעילים את האלגוריתם איזה כתובות מכילות מה שצריך, האם ניתן להגדיר סיבית VALID לשם כך? לחלופין היות והזיכרון עשוי להיות לשליטתנו- אפשר להגדיר טבלת תרגום או בפועל לוותר על ההתייחסות לכתיבה לא ישירה ולכתוב באופן רציף ל-RAM , ואם כן, אפשר בעצם לוותר על סיבית VALID ורק לדעת מונה של כמה נקודות ברצף שמרנו בזכרון עד שמסתיימת הכתיבה ההתחלתית של מילוי זיכרון, ובנוסף נרצה להתייחס גם למחיקה בסוף ההתכנסות של הנקודות - לאחר ששחררנו INTR חזרה לMASTER - האם עלינו בעצם לרוקן את הזיכרון או להתעלם ממה שאמור לקרות לאחר מכן, אנו היום עבדנו תחת הנחה שהזיכרון מטופל לפני הרצת הCORE ולאחר מכן באופן בלתי תלוי לפעולת הCORE.

תשובה: לשליתטנו להניח שלפני ואחרי החישוב כיצד יבוצע מילוי או ריקון הזיכרון, ריקון לא מעניין אותנו כבר, מילוי כן בעזרת indirect access.

2. איך בא לידי ביטוי שREG FILE הוא SLAVE מבחינת תקשורת עם ה-MASTER, כלומר הוא בתכלס רכיב פסיבי מנסיוננו שמכיל מוקס ורגיסטרים, וכאן הוא  צריך להיות אקטיבי ולנהל תקשורת כדי שיבוצעו פעולות, למשל כתיבה אליו אם הMASTER היה מבקש משהו שיהיה מוכן במיקום שהMASTER יקרא ממנו.
האם הREGFILE כ-SLAVE יכיל מעין בקר פנימי למען ניהול התקשורת בפרוטוקול המבוקש?

תשובה: הוא יכול ליזום פעולות לכיוון הcore למשל שליחת סיגנלים לבקר, אך הוא רכיב פסיבי במהותו.

3. איך הבקר משתתף בTOP או בCORE?
בעיקרון יש צורך לנהל סיביות בקרה מול הCORE כמובן, אך גם לנהל את הREGFILE ועשוי לעזור לפעול על שני הבלוקים-REGFILE וגם CORE על ידי בקר יחיד.

תשובה: הבקר הוא חלק מהCORE, גם אם יש תקשורת בהקשר של REGISTERFILE כמו שהוסבר בשאלה הקודמת, הוא יקבל פשוט סיגנלים ויפעל בהתאם.

משימות:
1. הרשמה למעבדה בעזרת אמיר. V
2. קבלת מידע על רכיבי חישוב כמו DIV וזיכרון RAM מגואל. V
3. להמשיך לסדר דיאגרמת בלוקים , להתייחס לזיכרון. V
4. בספר פרויקט לתעד ולהסביר דיאגרמת בלוקים המכונים ואולי כבר לכל הארכיטקטורה שנמשיך להשלים ברביעי. V

5. הוכחת נכונות PIPE וגלים.
6. מימוש TB ו-REGFILE עם CORE ריק ולא ממומש.