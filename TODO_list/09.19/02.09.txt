משימות להיום:
0. לתקן ספר לפי הערות שחר - בוצע חלקית, חסר החלק לגבי קאורדינטות - ראה שאלה 1 למטה על מנת שנשלים.
1. pipeline - throughput and dead cycles adressing - adress 2 pipes seperated and waiting because RAW - לא בוצע
2. TB  להבין מה קורה בקוד ולהכין משלנו בורילוג  - התחלנו ועבדנו על ה-top דווקא כדי להבין מה אנו רוצים לעשות, כעת כשיש לנו indirect access תקין, אפשר לחבר STUB ולהמשיך הלאה, רק צריך לאשש מול שחר.
3. תרשימי גלים מאקרו-מיקרו - בוצע עבור Indirect access.
4. לקבל מגואל RAM חדש עם פורט יחיד אם אפשר.

שאלות לשחר:
1. לפי פרק 3.1 של המאמר, הדאטה שצריך לעבור עיבוד הוא מטריצה 415x7 ולהבנתנו מדובר ב415 נק' כאשר לכל נקודה יש 7 קאורדינטות/מימדים,
האם זה נכון? אם כן עלינו לתקן ארכיטקטורה כי כעת אנחנו בפועל בנינו ארכיטקטורה שמותאמת לנקודות חד מימדיות וצריך להתאים לרב מימד(כל רגיסטר יצטרך לאחסן
במקרה זה 7x13bit כאשר 13 ביט זה מה שצריך כדי לייצג קאורדינטה אחת של נקודה בשיטת fixed point בטווח ערכים של המאמר(3.5 פלוס עד מינוס 3.2).
נצטרך לתקן כמה יוניטים בcore כתוצאה מכך כנראה?

2. במבנה ספר הפרויקט, יש תחת architecture גם תת נושא בשם Pins description וגם אחד בשם interface description - קצת קשה להבין מה ההבדל או להבין מה מטרתם
ומכך מה השוני במה שכדאי להציג בכל אחד.

3. לגבי פינים - מצד אחד יש את הtop שמכיל את regfile,core ומצד שני בחוץ יש stub שהם מתקשרים בפרוטוקול APB שלמדנו, אבל צריך עוד סיגנלים מעבר לפרוטוקול,
השאלה אם ליישם את התנהגותם בעזרת הפרוטוקול, נגיד INTRUPT יכול להתבצע בעזרת זה שה-CPU החיצוני שמיוצג בעזרת STUB יגיש בקשת קריאה לרגיסטר ספציפי,
והוא יהיה רגיסטר ייעודי בתוך REGFILE לשם INTERUPT, האם זה נכון לעבוד ככה? נראלי שכן כי זה מצדיק את הפרוטוקול - אם המסטר רוצה לדעת שסיימנו - שישלח בקשת
קריאה לרגיסטר INTR, נשמח לתת שירות ולענות לו על ידי ערך המוצב ברגיסטר.

4. אנחנו מבינים שצריך בקר פנימי לTOP, בנוסף ליותר פנימי שנמצא בcore, שיעזור כמו שדיברנו לפני שבועיים+ על כך שהREGFILE יוזם פעולות לכיוון הCORE, וכך גם בהקשר לשאלה 3,
נוכל לטפל בכל דרישה של המסטר.

5. נשמח שתסתכל על ה-INDIRECT ACCESS בורילוג שעשינו ותסכים עם הקוד לעומת הדיארגמת גלים - כי היה לנו הרבה עבודה להיסגר על הנושא של השמה מקבילית ואיך להשתלט על מה אמור לקרות שיהיה תיאום ונכונות
בין הדיאגרמה לקוד, ומכאן נוכל לסיים לבנות TB מסודר כשברור מה צריך לקרות.

משימות לפעם הבאה:
0. לתקן ספר לפי הערות שחר - לתקן לגבי קארודינטות.
1. pipeline - throughput and dead cycles adressing - adress 2 pipes seperated and waiting because RAW
2. תרשימי גלים מאקרו-מיקרו להמשיך.
3. TB להבין מה קורה בקוד ולהכין משלנו בורילוג - להכין TB עכשיו שיש indirect access.
4. לקבל מגואל RAM חדש עם פורט יחיד אם אפשר.
5. למלא חלק של block-diagram עבור kmeas-top בספר פרויקט תחת architecture.